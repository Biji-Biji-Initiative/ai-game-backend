{
  "name": "responses-api-fight-club",
  "version": "1.0.0",
  "description": "A stateful web app that challenges users with dynamic, AI-generated cognitive challenges to highlight their unique Human Edge",
  "main": "index.js",
  "type": "module",
  "bin": {
    "responses-cli": "./cli.js"
  },
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "cli": "node cli.js start",
    "setup:env": "node scripts/setup/setup-env.js",
    "setup:verify": "node scripts/verify-setup.js",
    "db:migrate": "node scripts/setup/run-migrations.js",
    "db:push": "npx supabase db push",
    "db:reset": "npx supabase db reset",
    "db:seed": "node scripts/setup/seed-data.js",
    "db:seed:challenges": "node scripts/setup/seed-data.js --challenges",
    "db:seed:users": "node scripts/setup/seed-data.js --users",
    "db:seed:reset": "node scripts/setup/seed-data.js --all --reset",
    "test": "node scripts/run-tests.js all",
    "test:domain": "node scripts/run-tests.js domain",
    "test:integration": "node scripts/run-tests.js integration",
    "test:external": "node scripts/run-tests.js external",
    "test:e2e": "node scripts/run-tests.js e2e",
    "test:unit": "node scripts/run-tests.js unit",
    "test:application": "node scripts/run-tests.js application",
    "test:watch": "node scripts/run-tests.js --watch",
    "test:skip-openai": "node scripts/run-tests.js --skip-openai",
    "test:skip-supabase": "node scripts/run-tests.js --skip-supabase",
    "test:focus": "node scripts/run-tests.js --focus",
    "lint": "eslint src/ scripts/ tests/ --ext .js,.mjs --quiet",
    "lint:fix": "eslint src/ scripts/ tests/ --ext .js,.mjs --fix --quiet",
    "format": "prettier --write \"src/**/*.{js,mjs}\" \"scripts/**/*.{js,mjs}\" \"tests/**/*.{js,mjs}\" \"*.md\"",
    "format:check": "prettier --check \"src/**/*.{js,mjs}\" \"scripts/**/*.{js,mjs}\" \"tests/**/*.{js,mjs}\" \"*.md\"",
    "quality": "node scripts/utils/verify-code-quality.js",
    "quality:jsdoc": "node scripts/utils/verify-code-quality.js --jsdoc-only",
    "quality:fixable": "node scripts/utils/verify-code-quality.js --fixable",
    "cleanup:scripts": "node scripts/utils/cleanup-temp-scripts.js",
    "dev:user": "node scripts/dev/create-test-user.js",
    "dev:token": "node scripts/dev/get-token.js",
    "dev:evaluations": "node scripts/dev/view-evaluations.js",
    "prepare": "husky && husky install",
    "migrate:esm:analyze": "node scripts/utils/esm-migration-plan.js analyze",
    "migrate:esm:file": "node scripts/utils/esm-migration-plan.js migrate"
  },
  "jest": {
    "setupFilesAfterEnv": [
      "./jest.setup.js"
    ],
    "testEnvironment": "node",
    "testTimeout": 15000,
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/archive/"
    ]
  },
  "keywords": [
    "ai",
    "openai",
    "responses-api",
    "cognitive-challenges",
    "human-edge"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@supabase/supabase-js": "^2.49.3",
    "axios": "^1.8.4",
    "body-parser": "^1.20.3",
    "chalk": "^4.1.2",
    "commander": "^11.1.0",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "node-cache": "^5.1.2",
    "openai": "^3.3.0",
    "readline": "^1.3.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^9.0.1",
    "winston": "^3.17.0",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@cucumber/cucumber": "^11.2.0",
    "chai": "^4.5.0",
    "chai-as-promised": "^8.0.1",
    "eslint": "^9.23.0",
    "@eslint/js": "^9.23.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jsdoc": "^46.9.0",
    "eslint-plugin-prettier": "^5.0.1",
    "glob": "^10.4.5",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "mkdirp": "^3.0.1",
    "mocha": "^10.8.2",
    "mock-fs": "^5.5.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.1.0",
    "proxyquire": "^2.1.3",
    "sinon": "^17.0.1",
    "supabase": "^2.20.5",
    "supertest": "^6.3.3"
  },
  "lint-staged": {
    "*.{js,mjs,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
} 
users:
  get:
    summary: Get all users (Admin)
    description: Retrieves a paginated list of all users in the system. Requires admin privileges.
    operationId: getAllUsers
    tags:
      - Users
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - $ref: '../components/parameters/common.yaml#/limitParam'
      - $ref: '../components/parameters/common.yaml#/offsetParam'
      - $ref: '../components/parameters/common.yaml#/sortParam'
      - $ref: '../components/parameters/common.yaml#/filterParam'
    responses:
      '200':
        description: Users retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    users:
                      type: array
                      items:
                        $ref: '../components/schemas/User.yaml'
                pagination:
                  $ref: '../components/schemas/common/PaginationParams.yaml'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/common.yaml#/ForbiddenError'

users_id:
  get:
    summary: Get user by ID (Admin)
    description: Retrieves a specific user by their unique identifier. Requires admin privileges.
    operationId: getUserByIdAdmin
    tags:
      - Users
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the user to retrieve
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: User found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../components/schemas/User.yaml'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/common.yaml#/ForbiddenError'
      '404':
        $ref: '../components/responses/common.yaml#/NotFoundError'

users_me:
  get:
    summary: Get current user profile
    description: Retrieves the profile information for the currently authenticated user.
    operationId: getCurrentUserProfile
    tags:
      - Users
      - Profile
    security:
      - bearerAuth: []
    responses:
      '200':
        description: User profile retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../components/schemas/User.yaml'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/common.yaml#/NotFoundError'

  put:
    summary: Update current user profile
    description: Updates profile information for the currently authenticated user.
    operationId: updateCurrentUserProfile
    tags:
      - Users
      - Profile
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/User.yaml#/UpdateUserInput'
    responses:
      '200':
        description: User profile updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../components/schemas/User.yaml'
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'

users_me_focus_area:
  put:
    summary: Set current user's focus area
    description: Updates the primary focus area for the currently authenticated user.
    operationId: setCurrentUserFocusArea
    tags:
      - Users
      - Profile
      - FocusAreas
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - focusArea
            properties:
              focusArea:
                type: string
                description: The name or ID of the focus area to set.
    responses:
      '200':
        description: Focus area updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../components/schemas/User.yaml'
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError' 
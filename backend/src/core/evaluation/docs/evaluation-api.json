{
  "openapi": "3.0.0",
  "info": {
    "title": "Evaluation API Documentation",
    "version": "1.0.0",
    "description": "API documentation for the Evaluation domain of the AI Fight Club"
  },
  "paths": {
    "/evaluations": {
      "post": {
        "summary": "Create an evaluation for a challenge response",
        "description": "Evaluates a user's response to a challenge and returns feedback and scoring",
        "operationId": "createEvaluation",
        "tags": ["Evaluations"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EvaluationRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Evaluation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": { "$ref": "#/components/schemas/Evaluation" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" }
        }
      }
    },
    "/evaluations/{id}": {
      "get": {
        "summary": "Get an evaluation by ID",
        "description": "Retrieves a specific evaluation by its unique ID",
        "operationId": "getEvaluationById",
        "tags": ["Evaluations"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the evaluation to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evaluation retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": { "$ref": "#/components/schemas/Evaluation" }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "403": {
            "description": "Not authorized to access this evaluation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to access this evaluation"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" }
        }
      }
    },
    "/users/{userId}/evaluations": {
      "get": {
        "summary": "Get all evaluations for a user",
        "description": "Retrieves all evaluations associated with a specific user",
        "operationId": "getEvaluationsForUser",
        "tags": ["Evaluations", "Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to get evaluations for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evaluations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Evaluation"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to access these evaluations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to access these evaluations"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" }
        }
      }
    },
    "/challenges/{challengeId}/evaluations": {
      "get": {
        "summary": "Get evaluations for a specific challenge",
        "description": "Retrieves all evaluations associated with a specific challenge for the current user",
        "operationId": "getEvaluationsForChallenge",
        "tags": ["Evaluations", "Challenges"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "description": "ID of the challenge to get evaluations for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evaluations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Evaluation"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" }
        }
      }
    },
    "/evaluations/stream": {
      "post": {
        "summary": "Stream an evaluation response in real-time",
        "description": "Streams the evaluation of a challenge response as server-sent events",
        "operationId": "streamEvaluation",
        "tags": ["Evaluations"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EvaluationRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server-sent event stream started",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["chunk", "complete", "error"]
                    },
                    "content": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EvaluationRequest": {
        "type": "object",
        "required": ["challengeId", "response"],
        "properties": {
          "challengeId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the challenge to evaluate"
          },
          "response": {
            "type": "string",
            "description": "User's response to the challenge"
          }
        },
        "example": {
          "challengeId": "550e8400-e29b-41d4-a716-446655440000",
          "response": "My solution to the challenge is..."
        }
      },
      "Evaluation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the evaluation"
          },
          "challengeId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the challenge that was evaluated"
          },
          "responseId": {
            "type": "string",
            "description": "ID of the response that was evaluated"
          },
          "userEmail": {
            "type": "string",
            "format": "email",
            "description": "Email of the user"
          },
          "score": {
            "type": "number",
            "description": "Numerical score (0-100)"
          },
          "scorePercentage": {
            "type": "number",
            "description": "Score as a percentage (0-100)"
          },
          "feedback": {
            "type": "string",
            "description": "Detailed feedback on the response"
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strengths identified in the response"
          },
          "areas_for_improvement": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of areas that could be improved"
          },
          "criteria": {
            "type": "object",
            "description": "Criteria-specific evaluation details"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the evaluation was created"
          },
          "hasFeedback": {
            "type": "boolean",
            "description": "Whether the evaluation includes detailed feedback"
          }
        },
        "example": {
          "id": "550e8400-e29b-41d4-a716-446655440000",
          "challengeId": "550e8400-e29b-41d4-a716-446655440001",
          "score": 85,
          "scorePercentage": 85,
          "feedback": "Good work overall. Your solution is efficient and well-structured.",
          "strengths": ["Efficient algorithm", "Clean code structure"],
          "areas_for_improvement": ["Could improve error handling"],
          "createdAt": "2023-06-15T14:35:42Z",
          "hasFeedback": true
        }
      },
      "StreamEvent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["chunk", "complete", "error"],
            "description": "Type of stream event"
          },
          "content": {
            "type": "string",
            "description": "Content chunk for chunk events"
          },
          "evaluationId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the completed evaluation (for complete events)"
          },
          "score": {
            "type": "number",
            "description": "Score of the completed evaluation (for complete events)"
          },
          "message": {
            "type": "string",
            "description": "Error message (for error events)"
          }
        },
        "example": {
          "type": "chunk",
          "content": "Your solution demonstrates a good understanding of..."
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication information is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized - Invalid or missing token"
                }
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Resource not found"
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "The request data failed validation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Validation error"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
} 
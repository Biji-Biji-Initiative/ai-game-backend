import fs from 'fs/promises'; import path from 'path'; const LOG_DIR = path.join(process.cwd(), 'logs'); const OUT_LOG_FILE = path.join(LOG_DIR, 'pm2_out.log'); class MinimalSystemController { constructor() { console.log('[MinimalSystemController] Initialized'); } async getLogs(req, res, next) { console.log('[MinimalSystemController] getLogs called'); try { const limit = parseInt(req.query.limit, 10) || 100; let logs = []; try { const outLogContent = await fs.readFile(OUT_LOG_FILE, 'utf8'); const lines = outLogContent.split('
').filter(Boolean); logs = lines.map(line => ({ timestamp: new Date().toISOString(), level: 'INFO', message: line })); } catch (err) { console.error('[MinimalSystemController] Error reading log:', err.message); } res.json({ status: 'success', data: { logs: logs.slice(0, limit), count: logs.length } }); } catch (error) { console.error('[MinimalSystemController] Error:', error); next(error); } } } export default MinimalSystemController;

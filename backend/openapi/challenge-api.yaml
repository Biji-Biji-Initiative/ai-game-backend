openapi: 3.0.3
info:
  title: Challenge API
  description: API for generating and managing cognitive challenges
  version: 1.0.0
servers:
  - url: /api/v1
    description: Default API server
paths:
  /challenges/generate:
    post:
      summary: Generate a new challenge
      description: Generates a new cognitive challenge for a user based on provided parameters
      operationId: generateChallenge
      tags:
        - challenges
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userEmail
              properties:
                userEmail:
                  type: string
                  format: email
                  description: Email of the user requesting the challenge
                focusArea:
                  type: string
                  description: Focus area for the challenge
                challengeType:
                  type: string
                  description: Type of challenge to generate
                formatType:
                  type: string
                  description: Format type for the challenge
                difficulty:
                  type: string
                  enum: [beginner, intermediate, advanced, expert]
                  description: Difficulty level of the challenge
      responses:
        '201':
          description: Challenge created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /challenges/{challengeId}:
    get:
      summary: Get challenge by ID
      description: Retrieves a challenge by its unique identifier
      operationId: getChallengeById
      tags:
        - challenges
      security:
        - bearerAuth: []
      parameters:
        - name: challengeId
          in: path
          required: true
          description: ID of the challenge to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Challenge found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeResponse'
        '401':
          description: Unauthorized
        '404':
          description: Challenge not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /challenges/{challengeId}/submit:
    post:
      summary: Submit a challenge response
      description: Submit a user's response to a specific challenge
      operationId: submitChallengeResponse
      tags:
        - challenges
      security:
        - bearerAuth: []
      parameters:
        - name: challengeId
          in: path
          required: true
          description: ID of the challenge
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userEmail
                - response
              properties:
                userEmail:
                  type: string
                  format: email
                  description: Email of the user submitting the response
                response:
                  type: string
                  description: User's response to the challenge
      responses:
        '200':
          description: Response submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeResponseSubmission'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '404':
          description: Challenge not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /challenges/user/{userEmail}/history:
    get:
      summary: Get challenge history for a user
      description: Retrieves all challenges associated with a specific user
      operationId: getChallengeHistory
      tags:
        - challenges
      security:
        - bearerAuth: []
      parameters:
        - name: userEmail
          in: path
          required: true
          description: Email of the user to retrieve challenge history for
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Challenge history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeHistoryResponse'
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Challenge:
      type: object
      required:
        - id
        - content
        - userEmail
        - status
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the challenge
        content:
          type: string
          description: The challenge content/question
        userEmail:
          type: string
          format: email
          description: Email of the user the challenge is for
        focusArea:
          type: string
          description: The focus area of the challenge
        challengeType:
          type: string
          description: The type of challenge
        formatType:
          type: string
          description: The format of the challenge
        difficulty:
          type: string
          enum: [beginner, intermediate, advanced, expert]
          description: Difficulty level of the challenge
        status:
          type: string
          enum: [pending, submitted, evaluated]
          description: Current status of the challenge
        createdAt:
          type: string
          format: date-time
          description: When the challenge was created
        updatedAt:
          type: string
          format: date-time
          description: When the challenge was last updated
    
    ChallengeResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          default: true
        data:
          $ref: '#/components/schemas/Challenge'
    
    ChallengeResponseSubmission:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          default: true
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: ID of the response submission
            challengeId:
              type: string
              format: uuid
              description: ID of the challenge
            userEmail:
              type: string
              format: email
              description: Email of the user
            response:
              type: string
              description: The submitted response
            submittedAt:
              type: string
              format: date-time
              description: When the response was submitted
            status:
              type: string
              enum: [submitted, evaluated]
              description: Status of the response
    
    ChallengeHistoryResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          default: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Challenge'
    
    Error:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
          description: Error message
        errorCode:
          type: string
          description: Error code for client-side error handling
        details:
          type: object
          description: Additional error details 
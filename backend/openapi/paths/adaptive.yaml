recommendations:
  get:
    summary: Get adaptive recommendations
    description: Retrieves personalized adaptive learning recommendations for the current user
    operationId: getAdaptiveRecommendations
    tags:
      - Adaptive
    security:
      - bearerAuth: []
    parameters:
      - $ref: '../components/parameters/common.yaml#/limitParam'
      - $ref: '../components/parameters/common.yaml#/offsetParam'
      - name: type
        in: query
        description: Filter by recommendation type
        schema:
          type: string
          enum: [challenge, resource, skill_focus, difficulty_adjustment]
      - name: status
        in: query
        description: Filter by recommendation status
        schema:
          type: string
          enum: [active, dismissed, completed]
    responses:
      '200':
        description: Recommendations retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../components/schemas/AdaptiveRecommendation.yaml'
                pagination:
                  $ref: '../components/schemas/common/PaginationParams.yaml'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'

dynamic_challenge:
  post:
    summary: Generate dynamic challenge
    description: Generates a challenge dynamically based on user's skill level and learning path
    operationId: generateDynamicChallenge
    tags:
      - Adaptive
      - Challenges
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              focusArea:
                type: string
                description: Specific area to focus on (optional)
              preferredDifficulty:
                type: string
                enum: [beginner, intermediate, advanced, expert]
                description: User's preferred difficulty level (optional)
              includeConcepts:
                type: array
                items:
                  type: string
                description: Specific concepts to include (optional)
    responses:
      '201':
        description: Dynamic challenge created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas/Challenge.yaml'
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'

skill_profile:
  get:
    summary: Get user skill profile
    description: Retrieves the current user's skill profile based on their learning history
    operationId: getUserSkillProfile
    tags:
      - Adaptive
      - Users
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Skill profile retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    userId:
                      type: string
                      format: uuid
                      description: ID of the user
                    skills:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Name of the skill
                          proficiency:
                            type: number
                            format: float
                            minimum: 0
                            maximum: 100
                            description: Proficiency level (0-100)
                          lastImproved:
                            type: string
                            format: date-time
                            description: When the skill was last improved
                    recommendedFocusAreas:
                      type: array
                      items:
                        type: string
                        description: Areas recommended for improvement
                    overallProficiency:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 100
                      description: Overall proficiency level (0-100)
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError' 
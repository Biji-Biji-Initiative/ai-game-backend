login:
  post:
    summary: Login to the system
    description: Authenticates a user and returns a JWT token
    operationId: loginUser
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
                description: User's email address
              password:
                type: string
                format: password
                description: User's password
    responses:
      '200':
        description: Login successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    token:
                      type: string
                      description: JWT token for authentication
                    user:
                      $ref: '../components/schemas/User.yaml'
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        description: Invalid credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: Invalid email or password

register:
  post:
    summary: Register a new user
    description: Creates a new user account
    operationId: registerUser
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
              - fullName
            properties:
              email:
                type: string
                format: email
                description: User's email address
              password:
                type: string
                format: password
                description: User's password
              fullName:
                type: string
                description: User's full name
              professionalTitle:
                type: string
                description: User's professional title
              location:
                type: string
                description: User's location
              country:
                type: string
                description: User's country
              focusArea:
                type: string
                description: User's primary focus area
    responses:
      '201':
        description: Registration successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    token:
                      type: string
                      description: JWT token for authentication
                    user:
                      $ref: '../components/schemas/User.yaml'
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '409':
        description: User already exists
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User with this email already exists

status:
  get:
    summary: Auth service status
    description: Returns the status of the authentication service
    operationId: getAuthStatus
    tags:
      - Auth
    responses:
      '200':
        description: Auth service status check
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                message:
                  type: string
                  example: Auth service is running
                authenticated:
                  type: boolean
                  example: false
                  description: Indicates if the request includes valid authentication 
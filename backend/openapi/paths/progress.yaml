progress:
  get:
    summary: Get current user's overall progress summary
    description: Retrieves the overall progress summary for the current authenticated user
    operationId: getUserProgressSummary
    tags:
      - Progress
    security:
      - bearerAuth: []
    responses:
      '200':
        description: User progress summary retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    progressSummary:
                      type: object
                      properties:
                        overall:
                          type: number
                          format: float
                          minimum: 0
                          maximum: 100
                          description: Overall progress percentage
                        level:
                          type: integer
                          description: User's current level based on progress
                        skillLevels:
                          type: object
                          additionalProperties:
                            type: number
                            minimum: 0
                            maximum: 100
                          description: Map of skill names to estimated level values
                        challengesCompleted:
                          type: integer
                          description: Number of challenges completed contributing to this summary
                        lastActive:
                          type: string
                          format: date-time
                          description: Timestamp of the last activity influencing progress
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'

progress_all:
  get:
    summary: Get all progress records for user
    description: Retrieves a paginated list of all progress records for the current user
    operationId: getAllUserProgressRecords
    tags:
      - Progress
    security:
      - bearerAuth: []
    parameters:
      - $ref: '../components/parameters/common.yaml#/limitParam'
      - $ref: '../components/parameters/common.yaml#/offsetParam'
      - $ref: '../components/parameters/common.yaml#/sortParam'
    responses:
      '200':
        description: Progress records retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    progressRecords:
                      type: array
                      items:
                        $ref: '../schemas.yaml#/components/schemas/ProgressRecord'
                pagination:
                  $ref: '../components/schemas/common/PaginationParams.yaml'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'

progress_challenge_id:
  get:
    summary: Get progress for a specific challenge
    description: Retrieves the user's progress details for a specific completed challenge
    operationId: getChallengeProgress
    tags:
      - Progress
      - Challenges
    security:
      - bearerAuth: []
    parameters:
      - name: challengeId
        in: path
        required: true
        description: ID of the challenge
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Challenge progress retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    challengeProgress:
                      $ref: '../schemas.yaml#/components/schemas/ChallengeProgressDetail'
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/common.yaml#/NotFoundError'

progress_complete_challenge:
  post:
    summary: Record challenge completion
    description: Records the completion of a challenge and associated progress metrics for the current user
    operationId: recordChallengeCompletion
    tags:
      - Progress
      - Challenges
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas.yaml#/components/schemas/CompleteChallengeInput'
    responses:
      '200':
        description: Challenge completion recorded successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    progressRecord:
                      $ref: '../schemas.yaml#/components/schemas/ProgressRecord'
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'

progress_skills:
  put:
    summary: Update user skill levels directly
    description: Allows direct update of the user's calculated skill levels (potentially admin only or specific use cases)
    operationId: updateSkillLevels
    tags:
      - Progress
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: Map of skill names to new level values
            additionalProperties:
              type: number
              minimum: 0
              maximum: 100
            example:
              communication: 75
              problem_solving: 80
    responses:
      '200':
        description: Skill levels updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    updatedSkills:
                       type: object
                       description: The updated skill levels map
                       additionalProperties:
                         type: number
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/common.yaml#/ForbiddenError'

progress_focus_area:
  put:
    summary: Set focus area
    description: Sets the user's current focus area
    operationId: setFocusArea
    tags:
      - Progress
      - FocusAreas
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - focusArea
            properties:
              focusArea:
                type: string
                description: Focus area to set
    responses:
      '200':
        description: Focus area updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: success
                data:
                  type: object
                  properties:
                    focusArea:
                      type: string
                      description: Updated focus area
                    updatedAt:
                      type: string
                      format: date-time
                      description: Update timestamp
      '400':
        $ref: '../components/responses/common.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/common.yaml#/UnauthorizedError' 
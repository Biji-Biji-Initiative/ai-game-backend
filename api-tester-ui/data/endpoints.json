{
  "endpoints": [
    {
      "name": "Get Users",
      "method": "GET",
      "path": "/api/users",
      "description": "Retrieves a list of users",
      "category": "Users",
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "required": false,
          "type": "integer",
          "description": "Page number",
          "default": "1"
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "description": "Results per page",
          "default": "10"
        }
      ],
      "responseExample": {
        "users": [
          {
            "id": 1,
            "name": "John Doe",
            "email": "john@example.com",
            "role": "admin"
          },
          {
            "id": 2,
            "name": "Jane Smith",
            "email": "jane@example.com",
            "role": "user"
          }
        ],
        "total": 2,
        "page": 1,
        "limit": 10
      }
    },
    {
      "name": "Get User by ID",
      "method": "GET",
      "path": "/api/users/{id}",
      "description": "Retrieves a specific user by ID",
      "category": "Users",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "User ID"
        }
      ],
      "responseExample": {
        "id": 1,
        "name": "John Doe",
        "email": "john@example.com",
        "role": "admin",
        "createdAt": "2023-01-15T08:30:00Z",
        "updatedAt": "2023-03-20T14:15:00Z"
      }
    },
    {
      "name": "Create User",
      "method": "POST",
      "path": "/api/users",
      "description": "Creates a new user",
      "category": "Users",
      "parameters": [],
      "requestBody": {
        "name": "User object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "New User"
                },
                "email": {
                  "type": "string",
                  "example": "newuser@example.com"
                },
                "role": {
                  "type": "string",
                  "example": "user"
                }
              },
              "required": ["name", "email"]
            }
          }
        }
      },
      "responseExample": {
        "id": 3,
        "name": "New User",
        "email": "newuser@example.com",
        "role": "user",
        "createdAt": "2023-06-10T11:25:00Z",
        "updatedAt": "2023-06-10T11:25:00Z"
      }
    },
    {
      "name": "Update User",
      "method": "PUT",
      "path": "/api/users/{id}",
      "description": "Updates an existing user",
      "category": "Users",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "User ID"
        }
      ],
      "requestBody": {
        "name": "User object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated User"
                },
                "email": {
                  "type": "string",
                  "example": "updated@example.com"
                },
                "role": {
                  "type": "string",
                  "example": "admin"
                }
              }
            }
          }
        }
      },
      "responseExample": {
        "id": 1,
        "name": "Updated User",
        "email": "updated@example.com",
        "role": "admin",
        "createdAt": "2023-01-15T08:30:00Z",
        "updatedAt": "2023-06-10T12:30:00Z"
      }
    },
    {
      "name": "Delete User",
      "method": "DELETE",
      "path": "/api/users/{id}",
      "description": "Deletes a user",
      "category": "Users",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "User ID"
        }
      ],
      "responseExample": {
        "message": "User deleted successfully",
        "id": 1
      }
    },
    {
      "name": "Get Products",
      "method": "GET",
      "path": "/api/products",
      "description": "Retrieves a list of products",
      "category": "Products",
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "required": false,
          "type": "integer",
          "description": "Page number",
          "default": "1"
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "description": "Results per page",
          "default": "10"
        },
        {
          "name": "category",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter by category"
        }
      ],
      "responseExample": {
        "products": [
          {
            "id": 1,
            "name": "Product 1",
            "description": "Description for product 1",
            "price": 19.99,
            "category": "electronics"
          },
          {
            "id": 2,
            "name": "Product 2",
            "description": "Description for product 2",
            "price": 29.99,
            "category": "clothing"
          }
        ],
        "total": 2,
        "page": 1,
        "limit": 10
      }
    },
    {
      "name": "Get Product by ID",
      "method": "GET",
      "path": "/api/products/{id}",
      "description": "Retrieves a specific product by ID",
      "category": "Products",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Product ID"
        }
      ],
      "responseExample": {
        "id": 1,
        "name": "Product 1",
        "description": "Detailed description for product 1",
        "price": 19.99,
        "category": "electronics",
        "inventory": 100,
        "createdAt": "2023-02-10T10:00:00Z",
        "updatedAt": "2023-02-10T10:00:00Z"
      }
    },
    {
      "name": "Create Product",
      "method": "POST",
      "path": "/api/products",
      "description": "Creates a new product",
      "category": "Products",
      "parameters": [],
      "requestBody": {
        "name": "Product object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "New Product"
                },
                "description": {
                  "type": "string",
                  "example": "Description for new product"
                },
                "price": {
                  "type": "number",
                  "example": 39.99
                },
                "category": {
                  "type": "string",
                  "example": "furniture"
                }
              },
              "required": ["name", "price"]
            }
          }
        }
      },
      "responseExample": {
        "id": 3,
        "name": "New Product",
        "description": "Description for new product",
        "price": 39.99,
        "category": "furniture",
        "inventory": 0,
        "createdAt": "2023-06-10T13:45:00Z",
        "updatedAt": "2023-06-10T13:45:00Z"
      }
    },
    {
      "name": "Get Orders",
      "method": "GET",
      "path": "/api/orders",
      "description": "Retrieves a list of orders",
      "category": "Orders",
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "required": false,
          "type": "integer",
          "description": "Page number",
          "default": "1"
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "description": "Results per page",
          "default": "10"
        },
        {
          "name": "status",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter by status"
        }
      ],
      "responseExample": {
        "orders": [
          {
            "id": 1,
            "userId": 1,
            "totalAmount": 49.98,
            "status": "completed",
            "items": [
              {
                "productId": 1,
                "quantity": 2,
                "price": 19.99
              },
              {
                "productId": 2,
                "quantity": 1,
                "price": 9.99
              }
            ],
            "createdAt": "2023-05-15T14:30:00Z"
          },
          {
            "id": 2,
            "userId": 2,
            "totalAmount": 29.99,
            "status": "pending",
            "items": [
              {
                "productId": 3,
                "quantity": 1,
                "price": 29.99
              }
            ],
            "createdAt": "2023-06-01T10:15:00Z"
          }
        ],
        "total": 2,
        "page": 1,
        "limit": 10
      }
    },
    {
      "name": "Create Order",
      "method": "POST",
      "path": "/api/orders",
      "description": "Creates a new order",
      "category": "Orders",
      "parameters": [],
      "requestBody": {
        "name": "Order object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "integer",
                  "example": 1
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer",
                        "example": 1
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  }
                }
              },
              "required": ["userId", "items"]
            }
          }
        }
      },
      "responseExample": {
        "id": 3,
        "userId": 1,
        "totalAmount": 39.98,
        "status": "pending",
        "items": [
          {
            "productId": 1,
            "quantity": 2,
            "price": 19.99
          }
        ],
        "createdAt": "2023-06-10T15:00:00Z"
      }
    },
    {
      "name": "Authenticate",
      "method": "POST",
      "path": "/api/auth/login",
      "description": "Authenticates a user and returns a token",
      "category": "Authentication",
      "parameters": [],
      "requestBody": {
        "name": "Credentials",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": ["email", "password"]
            }
          }
        }
      },
      "responseExample": {
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
        "user": {
          "id": 1,
          "name": "John Doe",
          "email": "john@example.com",
          "role": "admin"
        },
        "expiresIn": 3600
      }
    },
    {
      "name": "Refresh Token",
      "method": "POST",
      "path": "/api/auth/refresh",
      "description": "Refreshes an authentication token",
      "category": "Authentication",
      "parameters": [],
      "requestBody": {
        "name": "Refresh Token",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              },
              "required": ["refreshToken"]
            }
          }
        }
      },
      "responseExample": {
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
        "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
        "expiresIn": 3600
      }
    }
  ]
} 